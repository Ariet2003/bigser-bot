from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton


user_button = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="üî∞ –ö–∞—Ç–∞–ª–æ–≥", callback_data='user_catalog'),
     InlineKeyboardButton(text="üõí –ö–æ—Ä–∑–∏–Ω–∞", callback_data='user_cart')],
    [InlineKeyboardButton(text="üì¶ –ú–æ–∏ –∑–∞–∫–∞–∑—ã", callback_data='user_my_orders'),
     InlineKeyboardButton(text="ü§ñ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è", callback_data='user_consultation')],
    [InlineKeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data='user_settings'),
     InlineKeyboardButton(text="üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data='user_support')]
])

user_settings_setting = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –§–ò–û", callback_data='change_fullname'),
     InlineKeyboardButton(text="üìû –ò–∑–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä", callback_data='change_phone')],
    [InlineKeyboardButton(text="üìç –ò–∑–º–µ–Ω–∏—Ç—å –∞–¥—Ä–µ—Å", callback_data='change_delivery')],
    [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data='go_to_user_dashboard')]
])

go_to_user_dashboard = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="‚¨ÖÔ∏è –í –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç", callback_data='go_to_user_dashboard')]
])

user_settings = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data='user_settings')]
])


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –∫–∞—Ç–∞–ª–æ–≥–∞

def get_categories_keyboard(categories, current_page, total_pages):
    """
    –§–æ—Ä–º–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π.
    Callback_data: select_category:{category_id}:{current_page}
    """
    keyboard = InlineKeyboardMarkup(inline_keyboard=[])
    for cat in categories:
        keyboard.inline_keyboard.append([
            InlineKeyboardButton(text=cat.name, callback_data=f"select_category:{cat.id}:{current_page}")
        ])
    nav_buttons = []
    if current_page > 1:
        nav_buttons.append(InlineKeyboardButton(text="‚óÄÔ∏è", callback_data=f"cat_page:{current_page - 1}"))
    nav_buttons.append(InlineKeyboardButton(text=f"{current_page}/{total_pages}", callback_data="ignore"))
    if current_page < total_pages:
        nav_buttons.append(InlineKeyboardButton(text="‚ñ∂Ô∏è", callback_data=f"cat_page:{current_page + 1}"))
    keyboard.inline_keyboard.append(nav_buttons)
    keyboard.inline_keyboard.append([InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="go_to_user_dashboard")])
    return keyboard

def get_subcategories_keyboard(subcategories, category_id, current_page, total_pages):
    """
    –§–æ—Ä–º–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π.
    Callback_data: select_subcat:{subcategory_id}:{category_id}:{current_page}
    """
    keyboard = InlineKeyboardMarkup(inline_keyboard=[])
    for subcat in subcategories:
        keyboard.inline_keyboard.append([
            InlineKeyboardButton(text=subcat.name, callback_data=f"select_subcat:{subcat.id}:{category_id}:{current_page}")
        ])
    nav_buttons = []
    if current_page > 1:
        nav_buttons.append(InlineKeyboardButton(text="‚óÄÔ∏è", callback_data=f"subcat_page:{category_id}:{current_page - 1}"))
    nav_buttons.append(InlineKeyboardButton(text=f"{current_page}/{total_pages}", callback_data="ignore"))
    if current_page < total_pages:
        nav_buttons.append(InlineKeyboardButton(text="‚ñ∂Ô∏è", callback_data=f"subcat_page:{category_id}:{current_page + 1}"))
    keyboard.inline_keyboard.append(nav_buttons)
    keyboard.inline_keyboard.append([InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"cat_page:1")])
    return keyboard

def get_product_view_keyboard(category_id, subcat_id, product_index, photo_index, total_products, total_photos):
    """
    –§–æ—Ä–º–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ç–æ–≤–∞—Ä–∞.
    –í callback_data –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è category_id –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏.
    """
    keyboard = InlineKeyboardMarkup(inline_keyboard=[])
    nav_row = [
        InlineKeyboardButton(text="‚¨ÖÔ∏è", callback_data=f"photo_nav:prev:{subcat_id}:{product_index}:{photo_index}:{category_id}"),
        InlineKeyboardButton(text="‚û°Ô∏è", callback_data=f"photo_nav:next:{subcat_id}:{product_index}:{photo_index}:{category_id}")
    ]
    keyboard.inline_keyboard.append(nav_row)
    keyboard.inline_keyboard.append([
        InlineKeyboardButton(text="üõí –≤ –∫–æ—Ä–∑–∏–Ω—É", callback_data=f"to_cart:{subcat_id}:{product_index}:{photo_index}:{category_id}")
    ])
    prod_nav_row = [
        InlineKeyboardButton(text="‚è™", callback_data=f"prod_nav:prev:{subcat_id}:{product_index}:{category_id}"),
        InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data=f"prod_back:{category_id}:1"),
        InlineKeyboardButton(text="‚è©", callback_data=f"prod_nav:next:{subcat_id}:{product_index}:{category_id}")
    ]
    keyboard.inline_keyboard.append(prod_nav_row)
    return keyboard

def get_cart_view_keyboard(category_id, subcat_id, product_index, photo_index, size_index, color_index, quantity, available_size_names, available_color_names):
    keyboard = InlineKeyboardMarkup(inline_keyboard=[])
    current_size = available_size_names[size_index] if available_size_names and size_index >= 0 else "N/A"
    size_row = [
        InlineKeyboardButton(text="-", callback_data=f"cart_size:dec:{category_id}:{subcat_id}:{product_index}:{photo_index}:{size_index}:{color_index}:{quantity}"),
        InlineKeyboardButton(text=f"{current_size}", callback_data="ignore"),
        InlineKeyboardButton(text="+", callback_data=f"cart_size:inc:{category_id}:{subcat_id}:{product_index}:{photo_index}:{size_index}:{color_index}:{quantity}")
    ]
    keyboard.inline_keyboard.append(size_row)
    current_color = available_color_names[color_index] if available_color_names and color_index >= 0 else "N/A"
    color_row = [
        InlineKeyboardButton(text="‚¨ÖÔ∏è", callback_data=f"cart_color:dec:{category_id}:{subcat_id}:{product_index}:{photo_index}:{size_index}:{color_index}:{quantity}"),
        InlineKeyboardButton(text=f"{current_color}", callback_data="ignore"),
        InlineKeyboardButton(text="‚û°Ô∏è", callback_data=f"cart_color:inc:{category_id}:{subcat_id}:{product_index}:{photo_index}:{size_index}:{color_index}:{quantity}")
    ]
    keyboard.inline_keyboard.append(color_row)
    qty_row = [
        InlineKeyboardButton(text="+", callback_data=f"cart_qty:inc:{category_id}:{subcat_id}:{product_index}:{photo_index}:{size_index}:{color_index}:{quantity}"),
        InlineKeyboardButton(text=f"{quantity}", callback_data="ignore"),
        InlineKeyboardButton(text="-", callback_data=f"cart_qty:dec:{category_id}:{subcat_id}:{product_index}:{photo_index}:{size_index}:{color_index}:{quantity}")
    ]
    keyboard.inline_keyboard.append(qty_row)
    final_row = [
        InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data=f"cart_back:{category_id}:{subcat_id}:{product_index}:{photo_index}"),
        InlineKeyboardButton(text="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=f"cart_confirm:{category_id}:{subcat_id}:{product_index}:{photo_index}:{size_index}:{color_index}:{quantity}")
    ]
    keyboard.inline_keyboard.append(final_row)
    return keyboard


def get_order_success_keyboard(category_id, page):
    """
    –§–æ—Ä–º–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É, –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞.
    –ö–Ω–æ–ø–∫–∞ "‚¨ÖÔ∏è –ù–∞–∑–∞–¥" –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ø–∏—Å–æ–∫ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.
    Callback_data: order_success_back:{category_id}:{page}
    """
    from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
    keyboard = InlineKeyboardMarkup(inline_keyboard=[])
    keyboard.inline_keyboard.append([
        InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"order_success_back:{category_id}:{page}")
    ])
    return keyboard


